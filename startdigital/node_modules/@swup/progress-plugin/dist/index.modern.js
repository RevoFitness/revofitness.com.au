import t from"@swup/plugin";function s(){return s=Object.assign?Object.assign.bind():function(t){for(var s=1;s<arguments.length;s++){var e=arguments[s];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])}return t},s.apply(this,arguments)}class e{constructor({className:t="progress-bar",styleAttr:s="data-progressbar-styles",animationDuration:e=300,minValue:i=.1,initialValue:r=.25,trickleValue:n=.03}={}){this.styleElement=null,this.progressElement=null,this.value=0,this.visible=!1,this.hiding=!1,this.trickleInterval=null,this.trickle=()=>{const t=Math.random()*this.trickleValue;this.setValue(this.value+t)},this.className=t,this.styleAttr=s,this.animationDuration=e,this.minValue=i,this.initialValue=r,this.trickleValue=n,this.styleElement=this.createStyleElement(),this.progressElement=this.createProgressElement()}get defaultStyles(){return`\n\t\t.${this.className} {\n\t\t\t\tposition: fixed;\n\t\t\t\tdisplay: block;\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\theight: 3px;\n\t\t\t\tbackground-color: black;\n\t\t\t\tz-index: 9999;\n\t\t\t\ttransition:\n\t\t\t\t\twidth ${this.animationDuration}ms ease-out,\n\t\t\t\t\topacity ${this.animationDuration/2}ms ${this.animationDuration/2}ms ease-in;\n\t\t\t\ttransform: translate3d(0, 0, 0);\n\t\t\t}\n\t\t`}show(){this.visible||(this.visible=!0,this.installStyleElement(),this.installProgressElement(),this.startTrickling())}hide(){this.visible&&!this.hiding&&(this.hiding=!0,this.fadeProgressElement(()=>{this.uninstallProgressElement(),this.stopTrickling(),this.visible=!1,this.hiding=!1}))}setValue(t){this.value=Math.min(1,Math.max(this.minValue,t)),this.refresh()}installStyleElement(){document.head.insertBefore(this.styleElement,document.head.firstChild)}installProgressElement(){this.progressElement.style.width="0%",this.progressElement.style.opacity="1",document.documentElement.insertBefore(this.progressElement,document.body),this.progressElement.scrollTop=0,this.setValue(Math.random()*this.initialValue)}fadeProgressElement(t){this.progressElement.style.opacity="0",setTimeout(t,1.5*this.animationDuration)}uninstallProgressElement(){this.progressElement.parentNode&&document.documentElement.removeChild(this.progressElement)}startTrickling(){this.trickleInterval||(this.trickleInterval=window.setInterval(this.trickle,this.animationDuration))}stopTrickling(){window.clearInterval(this.trickleInterval),delete this.trickleInterval}refresh(){requestAnimationFrame(()=>{this.progressElement.style.width=100*this.value+"%"})}createStyleElement(){const t=document.createElement("style");return t.setAttribute(this.styleAttr,""),t.textContent=this.defaultStyles,t}createProgressElement(){const t=document.createElement("div");return t.className=this.className,t}}class i extends t{constructor(t={}){super(),this.name="SwupProgressPlugin",this.startShowingProgress=()=>{this.progressBar.setValue(0),this.showProgressBarAfterDelay()},this.stopShowingProgress=()=>{this.progressBar.setValue(1),this.options.hideImmediately?this.hideProgressBar():this.finishAnimationAndHideProgressBar()},this.showProgressBar=()=>{this.cancelHideProgressBarTimeout(),this.progressBar.show()},this.showProgressBarAfterDelay=()=>{this.cancelShowProgressBarTimeout(),this.cancelHideProgressBarTimeout(),this.showProgressBarTimeout=window.setTimeout(this.showProgressBar,this.options.delay)},this.hideProgressBar=()=>{this.cancelShowProgressBarTimeout(),this.progressBar.hide()},this.finishAnimationAndHideProgressBar=()=>{this.cancelShowProgressBarTimeout(),this.hideProgressBarTimeout=window.setTimeout(this.hideProgressBar,this.options.transition)},this.cancelShowProgressBarTimeout=()=>{window.clearTimeout(this.showProgressBarTimeout),delete this.showProgressBarTimeout},this.cancelHideProgressBarTimeout=()=>{window.clearTimeout(this.hideProgressBarTimeout),delete this.hideProgressBarTimeout},this.options=s({},{className:"swup-progress-bar",delay:300,transition:void 0,minValue:void 0,initialValue:void 0,hideImmediately:!0},t),this.showProgressBarTimeout=null,this.hideProgressBarTimeout=null,this.progressBar=new e({className:this.options.className,animationDuration:this.options.transition,minValue:this.options.minValue,initialValue:this.options.initialValue})}mount(){this.swup.on("transitionStart",this.startShowingProgress),this.swup.on("contentReplaced",this.stopShowingProgress)}unmount(){this.swup.off("transitionStart",this.startShowingProgress),this.swup.off("contentReplaced",this.stopShowingProgress)}}export{i as default};
//# sourceMappingURL=index.modern.js.map
