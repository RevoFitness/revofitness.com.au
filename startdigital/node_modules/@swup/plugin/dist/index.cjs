const r=r=>String(r).split(".").concat(["0","0"]).slice(0,3).join(".");module.exports=class{constructor(){this.isSwupPlugin=!0,this.requires={},this.swup=void 0,this.version=void 0}mount(){}unmount(){}_beforeMount(){if(!this.name)throw new Error("You must define a name of plugin when creating a class.")}_afterUnmount(){}_checkRequirements(){return"object"!=typeof this.requires||Object.entries(this.requires).forEach(e=>{let[n,t]=e;if(t=Array.isArray(t)?t:[t],!function(e,n,t){const i=function(r,e){return"swup"===r?e.version??"":e.findPlugin(r)?.version??""}(e,t);return!!i&&((e,n)=>n.every(n=>{const[,t,i]=n.match(/^([\D]+)?(.*)$/)||[];var s,o;return((r,e)=>{const n={"":r=>0===r,">":r=>r>0,">=":r=>r>=0,"<":r=>r<0,"<=":r=>r<=0};return(n[e]||n[""])(r)})((o=i,s=r(s=e),o=r(o),s.localeCompare(o,void 0,{numeric:!0})),t||">=")}))(i,n)}(n,t,this.swup)){const r=`${n} ${t.join(", ")}`;throw new Error(`Plugin version mismatch: ${this.name} requires ${r}`)}}),!0}};
//# sourceMappingURL=index.cjs.map
