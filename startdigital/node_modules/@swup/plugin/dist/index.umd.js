!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e||self).SwupPlugin=n()}(this,function(){const e=e=>String(e).split(".").concat(["0","0"]).slice(0,3).join(".");return class{constructor(){this.isSwupPlugin=!0,this.requires={},this.swup=void 0,this.version=void 0}mount(){}unmount(){}_beforeMount(){if(!this.name)throw new Error("You must define a name of plugin when creating a class.")}_afterUnmount(){}_checkRequirements(){return"object"!=typeof this.requires||Object.entries(this.requires).forEach(n=>{let[t,i]=n;if(i=Array.isArray(i)?i:[i],!function(n,t,i){const r=function(e,n){return"swup"===e?n.version??"":n.findPlugin(e)?.version??""}(n,i);return!!r&&((n,t)=>t.every(t=>{const[,i,r]=t.match(/^([\D]+)?(.*)$/)||[];var o,s;return((e,n)=>{const t={"":e=>0===e,">":e=>e>0,">=":e=>e>=0,"<":e=>e<0,"<=":e=>e<=0};return(t[n]||t[""])(e)})((s=r,o=e(o=n),s=e(s),o.localeCompare(s,void 0,{numeric:!0})),i||">=")}))(r,t)}(t,i,this.swup)){const e=`${t} ${i.join(", ")}`;throw new Error(`Plugin version mismatch: ${this.name} requires ${e}`)}}),!0}}});
//# sourceMappingURL=index.umd.js.map
